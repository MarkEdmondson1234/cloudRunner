options:
  env:
  - 'CR_REGION=$_REGION'
  - 'GCE_DEFAULT_PROJECT_ID=$PROJECT_ID'
  - 'CR_BUILD_EMAIL=$_BUILD_EMAIL'
  - 'GCS_DEFAULT_BUCKET=$_BUCKET'
steps:
- name: 'gcr.io/gcer-public/packagetools:master'
  id: Devtools checks
  args:
  - "Rscript"
  - "-e"
  - |
    library(devtools)
    install_dev_deps()
    check()
    install()
- name: 'gcr.io/gcer-public/packagetools:master'
  id: Good Practices
  args:
  - "Rscript"
  - "-e"
  - |
    library(goodpractice)
    gp(checks = grep('(rcmdcheck|covr)', all_checks(), invert=TRUE, value=TRUE))
- name: 'gcr.io/gcer-public/packagetools:master'
  id: codecovr checks
  env:
  - 'CODECOV_TOKEN=$_CODECOV_TOKEN'
  args:
  - "Rscript"
  - "-e"
  - |
    library(covr)
    cv <- package_coverage()
    print(cv);
    codecov(coverage=cv, commit = '$COMMIT_SHA', branch = '$BRANCH_NAME')
- name: 'gcr.io/gcer-public/packagetools:master'
  id: rhub checks
  env:
  - 'RHUB_TOKEN=$_RHUB_TOKEN'
  args:
  - "Rscript"
  - "-e"
  - |
    library(rhub)
    validate_email(email="r@sunholo.com", token = Sys.getenv("RHUB_TOKEN"))
    check_for_cran(env_vars = c('CR_REGION=$_REGION',
                                'GCE_DEFAULT_PROJECT_ID=$PROJECT_ID',
                                'CR_BUILD_EMAIL=$_BUILD_EMAIL',
                                'GCS_DEFAULT_BUCKET=$_BUCKET'),
                   show_status = FALSE)


