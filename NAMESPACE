# Generated by roxygen2: do not edit by hand

S3method(print,BuildOperationMetadata)
S3method(print,ServiceList)
S3method(print,gar_Build)
S3method(print,gar_StorageSource)
export(Build)
export(HttpTarget)
export(Job)
export(RepoSource)
export(Source)
export(StorageSource)
export(cr_build)
export(cr_build_status)
export(cr_build_step)
export(cr_build_upload_gcs)
export(cr_build_wait)
export(cr_deploy)
export(cr_region_get)
export(cr_region_set)
export(cr_run)
export(cr_run_list)
export(cr_schedule)
export(namespaces.authorizeddomains.list)
export(namespaces.autodomainmappings.create)
export(namespaces.autodomainmappings.delete)
export(namespaces.autodomainmappings.get)
export(namespaces.autodomainmappings.list)
export(namespaces.autodomainmappings.replaceAutoDomainMapping)
export(namespaces.configurations.create)
export(namespaces.configurations.delete)
export(namespaces.configurations.get)
export(namespaces.configurations.list)
export(namespaces.configurations.replaceConfiguration)
export(namespaces.domainmappings.create)
export(namespaces.domainmappings.delete)
export(namespaces.domainmappings.get)
export(namespaces.domainmappings.list)
export(namespaces.domainmappings.replaceDomainMapping)
export(namespaces.revisions.delete)
export(namespaces.revisions.get)
export(namespaces.revisions.list)
export(namespaces.routes.create)
export(namespaces.routes.delete)
export(namespaces.routes.get)
export(namespaces.routes.list)
export(namespaces.routes.replaceRoute)
export(namespaces.services.create)
export(namespaces.services.delete)
export(namespaces.services.get)
export(namespaces.services.list)
export(namespaces.services.replaceService)
export(operations.cancel)
export(operations.get)
export(operations.list)
export(projects.builds.cancel)
export(projects.builds.create)
export(projects.builds.get)
export(projects.builds.list)
export(projects.builds.retry)
export(projects.locations.authorizeddomains.list)
export(projects.locations.autodomainmappings.create)
export(projects.locations.autodomainmappings.delete)
export(projects.locations.autodomainmappings.get)
export(projects.locations.autodomainmappings.list)
export(projects.locations.autodomainmappings.replaceAutoDomainMapping)
export(projects.locations.configurations.create)
export(projects.locations.configurations.delete)
export(projects.locations.configurations.get)
export(projects.locations.configurations.list)
export(projects.locations.configurations.replaceConfiguration)
export(projects.locations.domainmappings.create)
export(projects.locations.domainmappings.delete)
export(projects.locations.domainmappings.get)
export(projects.locations.domainmappings.list)
export(projects.locations.domainmappings.replaceDomainMapping)
export(projects.locations.get)
export(projects.locations.jobs.create)
export(projects.locations.jobs.delete)
export(projects.locations.jobs.get)
export(projects.locations.jobs.list)
export(projects.locations.jobs.patch)
export(projects.locations.jobs.pause)
export(projects.locations.jobs.resume)
export(projects.locations.jobs.run)
export(projects.locations.list)
export(projects.locations.revisions.delete)
export(projects.locations.revisions.get)
export(projects.locations.revisions.list)
export(projects.locations.routes.create)
export(projects.locations.routes.delete)
export(projects.locations.routes.get)
export(projects.locations.routes.list)
export(projects.locations.routes.replaceRoute)
export(projects.locations.services.create)
export(projects.locations.services.delete)
export(projects.locations.services.get)
export(projects.locations.services.getIamPolicy)
export(projects.locations.services.list)
export(projects.locations.services.replaceService)
export(projects.locations.services.setIamPolicy)
export(projects.locations.services.testIamPermissions)
export(projects.triggers.create)
export(projects.triggers.delete)
export(projects.triggers.get)
export(projects.triggers.list)
export(projects.triggers.patch)
export(projects.triggers.run)
import(assertthat)
importFrom(googleAuthR,gar_api_generator)
importFrom(googleCloudStorageR,gcs_upload)
importFrom(yaml,read_yaml)
importFrom(yaml,yaml.load_file)
