% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/buildtriggers.R
\name{cr_buildtrigger}
\alias{cr_buildtrigger}
\title{Creates a new `BuildTrigger`.This API is experimental.}
\usage{
cr_buildtrigger(
  name,
  trigger,
  build,
  description = paste("cr_buildtrigger: ", Sys.time()),
  disabled = FALSE,
  substitutions = NULL,
  ignoredFiles = NULL,
  includedFiles = NULL,
  source = NULL,
  trigger_tags = NULL,
  trigger_source = TRUE,
  projectId = cr_project_get()
)
}
\arguments{
\item{name}{User assigned name of the trigger}

\item{trigger}{The trigger source created via \link{cr_buildstep_repo}}

\item{build}{The build to trigger created via \link{cr_build_make}}

\item{description}{Human-readable description of this trigger}

\item{disabled}{If true, the trigger will never result in a build}

\item{substitutions}{A named list of Build macro variables}

\item{ignoredFiles}{ignored_files and included_files are file glob matches extended with support for "**".}

\item{includedFiles}{If any of the files altered in the commit pass the ignored_files}

\item{source}{A source the build will use. If left to default NULL will use the trigger's repo as the source.}

\item{trigger_tags}{Tags for the buildtrigger listing}

\item{trigger_source}{Default TRUE will use trigger's repo as source. FALSE will use a source configued in the build object if present. If \code{source=FALSE} and \code{trigger_source=FALSE} then will not use any source.}

\item{projectId}{ID of the project for which to configure automatic builds}
}
\description{
Creates a new `BuildTrigger`.This API is experimental.
}
\examples{
cr_project_set("my-project")
cr_bucket_set("my-bucket")
cloudbuild <- system.file("cloudbuild/cloudbuild.yaml",
                           package = "googleCloudRunner")
bb <- cr_build_make(cloudbuild)
github <- GitHubEventsConfig("MarkEdmondson1234/googleCloudRunner",
                             branch = "master")
# creates a trigger with named subtitutions
ss <- list(`_MYVAR` = "TEST1",
           `_GITHUB` = "MarkEdmondson1234/googleCloudRunner")

\dontrun{

}
}
\seealso{
Other BuildTrigger functions: 
\code{\link{BuildTrigger}()},
\code{\link{GitHubEventsConfig}()},
\code{\link{cr_buildtrigger_delete}()},
\code{\link{cr_buildtrigger_edit}()},
\code{\link{cr_buildtrigger_get}()},
\code{\link{cr_buildtrigger_list}()},
\code{\link{cr_buildtrigger_repo}()},
\code{\link{cr_buildtrigger_run}()}
}
\concept{BuildTrigger functions}
