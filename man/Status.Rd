% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/objects_build.R, R/objects_run.R,
%   R/objs_schedule.R
\name{Status}
\alias{Status}
\title{Status Object}
\usage{
Status(code = NULL, message = NULL, details = NULL)

Status(code = NULL, message = NULL, details = NULL)

Status(code = NULL, message = NULL, details = NULL)
}
\arguments{
\item{code}{The status code, which should be an enum value of google}

\item{message}{A developer-facing error message, which should be in English}

\item{details}{A list of messages that carry the error details}

\item{code}{Suggested HTTP return code for this status, 0 if not set}

\item{message}{A human-readable description of the status of this operation}

\item{status}{Status of the operation}

\item{details}{Extended data associated with the reason}

\item{reason}{A machine-readable description of why this operation is in the}

\item{metadata}{Standard list metadata}

\item{code}{The status code, which should be an enum value of google}

\item{message}{A developer-facing error message, which should be in English}

\item{details}{A list of messages that carry the error details}
}
\value{
Status object

Status object

Status object
}
\description{
Status Object

Status Object

Status Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
The `Status` type defines a logical error model that is suitable fordifferent programming environments, including REST APIs and RPC APIs. It isused by [gRPC](https://github.com/grpc). Each `Status` message containsthree pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the[API Design Guide](https://cloud.google.com/apis/design/errors).

Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
Status is a return value for calls that don't return other objects

Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
The `Status` type defines a logical error model that is suitable fordifferent programming environments, including REST APIs and RPC APIs. It isused by [gRPC](https://github.com/grpc). Each `Status` message containsthree pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the[API Design Guide](https://cloud.google.com/apis/design/errors).
}
\concept{Status functions}
