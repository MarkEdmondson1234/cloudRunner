% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yaml.R
\name{cr_build_step}
\alias{cr_build_step}
\title{Create a yaml build step}
\usage{
cr_build_step(name, args, id = NULL, stem = "gcr.io/cloud-builders/",
  entrypoint = NULL, dir = "deploy")
}
\arguments{
\item{name}{name of SDK appended to stem}

\item{args}{character vector of arguments}

\item{id}{Optional id for the step}

\item{stem}{prefixed to name}

\item{entrypoint}{change the entrypoint for the docker container}

\item{dir}{The directory to use, relative to /workspace e.g. /workspace/deploy/}
}
\description{
Helper for creating build steps for upload to Cloud Build
}
\details{
By default dir is set to \code{deploy} to aid deployment from GCS, but you may want to set this to \code{""} when using \link{RepoSource}
}
\examples{

# creating yaml for use in deploying cloud run
image = "gcr.io/my-project/my-image$BUILD_ID"
Yaml(
    steps = list(
         cr_build_step("docker", c("build","-t",image,".")),
         cr_build_step("docker", c("push",image)),
         cr_build_step("gcloud", c("beta","run","deploy", "test1",
                                   "--image", image))),
    images = image)

# list files with a new entrypoint for gcloud
Yaml(steps = cr_build_step("gcloud", c("-c","ls -la"), entrypoint = "bash"))

}
\seealso{
Other Cloud Build functions, yaml functions: \code{\link{Yaml}},
  \code{\link{cr_build_write}}
}
\concept{Cloud Build functions, yaml functions}
