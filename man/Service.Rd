% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/objects.R
\name{Service}
\alias{Service}
\title{Service Object}
\usage{
Service(status = NULL, apiVersion = NULL, spec = NULL,
  metadata = NULL)
}
\arguments{
\item{status}{Status communicates the observed state of the Service (from the}

\item{apiVersion}{The API version for this call such as 'serving}

\item{spec}{Spec holds the desired state of the Service (from the client)}

\item{metadata}{Metadata associated with this Service, including name, namespace, labels,}
}
\value{
Service object
}
\description{
Service Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
Service acts as a top-level container that manages a set of Routes andConfigurations which implement a network service. Service exists to provide asingular abstraction which can be access controlled, reasoned about, andwhich encapsulates software lifecycle decisions such as rollout policy andteam resource ownership. Service acts only as an orchestrator of theunderlying Routes and Configurations (much as a kubernetes Deploymentorchestrates ReplicaSets).The Service's controller will track the statuses of its owned Configurationand Route, reflecting their statuses and conditions as its own.See also:https://github.com/knative/serving/blob/master/docs/spec/overview.md#service
}
\seealso{
Other Service functions: \code{\link{namespaces.services.create}},
  \code{\link{namespaces.services.replaceService}},
  \code{\link{projects.locations.services.create}},
  \code{\link{projects.locations.services.replaceService}}
}
\concept{Service functions}
